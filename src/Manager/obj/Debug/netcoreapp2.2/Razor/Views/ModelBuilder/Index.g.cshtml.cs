#pragma checksum "F:\学习\.Net Core\Asp.Net Core\Code\CodeBuild\CodeBuildSolution\src\Manager\Views\ModelBuilder\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f9b7b3d2f38f0429a325d331830b4044e15c5ad6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ModelBuilder_Index), @"mvc.1.0.view", @"/Views/ModelBuilder/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/ModelBuilder/Index.cshtml", typeof(AspNetCore.Views_ModelBuilder_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f9b7b3d2f38f0429a325d331830b4044e15c5ad6", @"/Views/ModelBuilder/Index.cshtml")]
    public class Views_ModelBuilder_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Manager.Models.ModelBuilderViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(121, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 4 "F:\学习\.Net Core\Asp.Net Core\Code\CodeBuild\CodeBuildSolution\src\Manager\Views\ModelBuilder\Index.cshtml"
  
    Layout = "_Main";

#line default
#line hidden
            BeginContext(198, 428, true);
            WriteLiteral(@"
    <div class=""row"">
        <div class=""col-md-6"" style=""width: 80%;"">
            <div class=""box box-info"">
                <form class=""form-horizontal"">
                    <div class=""box-body"">

                        <div class=""form-group"">
                            <label class=""col-sm-2 control-label"">数据库类型：</label>
                            <div class=""col-sm-10"">
                                ");
            EndContext();
            BeginContext(627, 126, false);
#line 18 "F:\学习\.Net Core\Asp.Net Core\Code\CodeBuild\CodeBuildSolution\src\Manager\Views\ModelBuilder\Index.cshtml"
                           Write(Html.DropDownListFor(model => model.DatabaseType, ViewData["DatabaseTypeList"] as SelectList, new { @class = "form-control" }));

#line default
#line hidden
            EndContext();
            BeginContext(753, 2715, true);
            WriteLiteral(@"
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label class=""col-sm-2 control-label"">服务器地址/IP：</label>
                            <div class=""col-sm-10"">
                                <input type=""text"" id=""Server"" class=""form-text"" placeholder=""例如：127.0.0.1"" />
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label class=""col-sm-2 control-label"">端口号：</label>
                            <div class=""col-sm-10"">
                                <input type=""text"" id=""Port"" class=""form-text"" placeholder=""例如：3306"" />
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label class=""col-sm-2 control-label"">用户名：</label>
                            <div class=""col-sm-10"">
                                <input type=""te");
            WriteLiteral(@"xt"" id=""UserName"" class=""form-text"" placeholder=""例如：root"" />
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label class=""col-sm-2 control-label"">密码：</label>
                            <div class=""col-sm-10"">
                                <input type=""password"" id=""Password"" class=""form-text"" placeholder=""例如：123456"" />
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label class=""col-sm-2 control-label"">数据库：</label>
                            <div class=""col-sm-8"">
                                <select class=""form-control"" id=""slDatabase"">
                                    <option value="""">请选择...</option>
                                </select>
                            </div>
                            <div class=""col-sm-2"">
                                <input type=""button"" class=""btn btn");
            WriteLiteral(@"-primary pull-right"" value=""获取数据库"" id=""btnGetDatabase"" />
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label class=""col-sm-2 control-label"">表名称：</label>
                            <div class=""col-sm-10"">
                                <select class=""form-control"" id=""slTable"">
                                    <option value="""">请选择...</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class=""box-footer"">
                        
");
            EndContext();
            BeginContext(3615, 214, true);
            WriteLiteral("                        <input type=\"button\" class=\"btn btn-primary pull-right\" value=\"生成代码\" id=\"btnBuild\" />\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
            EndContext();
            DefineSection("Footer", async() => {
                BeginContext(3845, 580, true);
                WriteLiteral(@"

    <script type=""text/javascript"">
        $(function () {

            $(""#btnGetDatabase"").click(function () {
                var DatabaseType = $(""#DatabaseType"").val();
                var Server = $(""#Server"").val();
                var Port = $(""#Port"").val();
                var UserName = $(""#UserName"").val();
                var Password = $(""#Password"").val();
                var data = JSON.stringify({ ""DatabaseType"": DatabaseType, ""Server"": Server, ""Port"": Port, ""UserName"": UserName, ""Password"": Password });
                var getDatabaseUrl = """);
                EndContext();
                BeginContext(4426, 41, false);
#line 87 "F:\学习\.Net Core\Asp.Net Core\Code\CodeBuild\CodeBuildSolution\src\Manager\Views\ModelBuilder\Index.cshtml"
                                 Write(Url.Content("~/ModelBuilder/GetDatabase"));

#line default
#line hidden
                EndContext();
                BeginContext(4467, 1409, true);
                WriteLiteral(@""";
                SendHttpRequest(""POST"", getDatabaseUrl, ""json"", data, function (result) {
                    if (result != undefined && result.length > 0) {
                        $.each(result, function (name, value) {
                            $(""#slDatabase"").append(""<option value='"" + value + ""'>"" + value + ""</option>"");
                        });
                    }
                });
            });

            $(""#slDatabase"").change(function () {
                    //$(""#slTable"").empty();
                $(""#slTable option:not(:first)"").remove();
                var DatabaseType = $(""#DatabaseType"").val();
                var Server = $(""#Server"").val();
                var Port = $(""#Port"").val();
                var UserName = $(""#UserName"").val();
                var Password = $(""#Password"").val();
                var database = $(""#slDatabase"").val();
                if (database == '') {
                    ShowErrorMessage(""请选择数据库"")
                    return ");
                WriteLiteral(@"false;
                }

                var data = JSON.stringify(
                    {
                        ""DatabaseType"": DatabaseType, ""Server"": Server
                        , ""Port"": Port, ""UserName"": UserName, ""Password"": Password
                        , ""DatabaseName"": database
                    }
                );
                var getDatabaseUrl = """);
                EndContext();
                BeginContext(5877, 38, false);
#line 118 "F:\学习\.Net Core\Asp.Net Core\Code\CodeBuild\CodeBuildSolution\src\Manager\Views\ModelBuilder\Index.cshtml"
                                 Write(Url.Content("~/ModelBuilder/GetTable"));

#line default
#line hidden
                EndContext();
                BeginContext(5915, 1547, true);
                WriteLiteral(@""";
                SendHttpRequest(""POST"", getDatabaseUrl, ""json"", data, function (result) {
                    if (result != undefined && result.length > 0) {
                        $.each(result, function (name, value) {
                            $(""#slTable"").append(""<option value='"" + value + ""'>"" + value + ""</option>"");
                        });
                    }
                });
                return true;
            });


            $(""#btnBuild"").click(function () {
                var DatabaseType = $(""#DatabaseType"").val();
                var Server = $(""#Server"").val();
                var Port = $(""#Port"").val();
                var UserName = $(""#UserName"").val();
                var Password = $(""#Password"").val();
                var database = $(""#slDatabase"").val();
                var tableName = $(""#slTable"").val();
                if (database == '') {
                    ShowErrorMessage(""请选择数据库"")
                    return false;
                }");
                WriteLiteral(@"
                if (tableName == '') {
                    ShowErrorMessage(""请选择表名称"")
                    return false;
                }
                var data = JSON.stringify(
                    {
                        ""DatabaseType"": DatabaseType, ""Server"": Server
                        , ""Port"": Port, ""UserName"": UserName, ""Password"": Password
                        , ""DatabaseName"": database, ""TableName"": tableName
                    }
                );
                var getDatabaseUrl = """);
                EndContext();
                BeginContext(7463, 35, false);
#line 153 "F:\学习\.Net Core\Asp.Net Core\Code\CodeBuild\CodeBuildSolution\src\Manager\Views\ModelBuilder\Index.cshtml"
                                 Write(Url.Content("~/ModelBuilder/Build"));

#line default
#line hidden
                EndContext();
                BeginContext(7498, 3167, true);
                WriteLiteral(@""";
                SendHttpRequest(""POST"", getDatabaseUrl, ""html"", data, function (result) {
                    //layer.msg(result);
                    //if (result != undefined && result.length > 0) {
                    //    $.each(result, function (name, value) {
                    //        $(""#slTable"").append(""<option value='"" + value + ""'>"" + value + ""</option>"");
                    //    });
                    //}
                    layer.open({
                        type: 1,
                        title: ""生成的 Model 代码"",
                        closeBtn: 1,
                        shadeClose: true,
                        area: ['700px', '650px'],
                        //skin: 'yourclass',
                        //btn: ['确定', '取消'],
                        //btn1: function () {
                        //    ShowCode();
                        //  }
                        //  ,btn2: function(){
                        //    Copy(this);
                        //  },
");
                WriteLiteral(@"                        content: result
                    });
                    //layer.open({
                    //  type: 2,
                    //  area: ['700px', '450px'],
                    //  fixed: false, //不固定
                    //  maxmin: true,
                    //  content: result
                    //});
                });
                //window.location.href = ""https://localhost:44395/ModelBuilder/Build?model="" + data;
                //layer.open({
                //      type: 2,
                //      area: ['700px', '450px'],
                //      fixed: false, //不固定
                //      maxmin: true,
                //      content: ""https://localhost:44395/ModelBuilder/Build?model="" + data
                //    });

            });

        });

        function SendHttpRequest(method, url, dataType, data, callback) {

            $.ajax({
                url: url
                , type: method
                , async: true
                ,");
                WriteLiteral(@" cache: true
                , contentType: ""application/json"" //默认值是application/x-www-form-urlencoded
                , dataType: dataType
                , data: data
                , error: function (XMLHttpRequest, textStatus, errorThrown) {
                    layer.msg('Faiure');
                    //layer.msg('操作失败：' + errorThrown, {
                    //    time: 3000 //2s后自动关闭
                    //    //, btn: ['明白了', '知道了']
                    //});
                }
                , success: function (result) {
                    layer.msg('Success');
                    callback(result);
                    //if (result != undefined && result.length > 0) {
                    //    $.each(result, function (name, value) {
                    //        $(""#slDatabase"").append(""<option value='"" + value + ""'>"" + value + ""</option>"");
                    //    });
                    //}
                }
            });

        }

        function ShowErrorMessage(messag");
                WriteLiteral("e) {\r\n            layer.alert(message, { icon: 2, title: \"错误\" });\r\n        }\r\n    </script>\r\n\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Manager.Models.ModelBuilderViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
